{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "projectStatus",
						"type": "uint8"
					}
				],
				"name": "BoardMessageToCharity",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "projectStatus",
						"type": "uint8"
					}
				],
				"name": "CharityMessageToBoard",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "projectStatus",
						"type": "uint8"
					}
				],
				"name": "CharityMessageToDonor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "projectStatus",
						"type": "uint8"
					}
				],
				"name": "CharityMessageToReceiver",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "projectStatus",
						"type": "uint8"
					}
				],
				"name": "ReceiverMessageToCharity",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					}
				],
				"name": "approveCharity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "boardAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "enumValue",
						"type": "uint8"
					}
				],
				"name": "changeProjectStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "charities",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "licenseDocsLink",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_charityId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_licenseDocsLink",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "charity",
						"type": "address"
					}
				],
				"name": "createCharity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_projectId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_goal",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_documentLink",
						"type": "string"
					}
				],
				"name": "createProject",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "donorId",
						"type": "uint256"
					}
				],
				"name": "donate",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "getProjectFundDetails",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "getProjectStatus",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "getRefund",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "projectStatus",
				"outputs": [
					{
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "projectStatuses",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "projects",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minimumAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "goal",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "raisedAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "acceptDonation",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "documentLink",
						"type": "string"
					},
					{
						"internalType": "enum CrowdFund.ProjectStatus",
						"name": "projectStatus",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					}
				],
				"name": "refundToAllDonors",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "rejectCharity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "projectId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "charityId",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "enumValue",
						"type": "uint8"
					}
				],
				"name": "updateProjectStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CrowdFund.sol": "CrowdFund"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CrowdFund.sol": {
			"keccak256": "0x65fefc91553e9a570b7aed0238a14639680e451810d9cf4e2c5ca74f025c4b02",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://6d554d0c847ac7eeb1c75daf0e3561fc1d2e2cc69e50ed1505ce9bf423c29103",
				"dweb:/ipfs/QmUF3a5fBGnz7x7yz1jMaQrxrv6NwagMDDSazp9wRqhihJ"
			]
		}
	},
	"version": 1
}